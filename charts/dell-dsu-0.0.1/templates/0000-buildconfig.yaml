apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: {{.Values.containerName}}
  name: {{.Values.containerName}}
spec: {}
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: {{.Values.specialresource.metadata.name}}
  name: {{.Values.specialresource.metadata.name}}
  annotations:
    specialresource.openshift.io/kernel-affine: "true"
spec:
  nodeSelector:
    node-role.kubernetes.io/worker: ""
  runPolicy: "Serial"
  triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
  source:
    git:
      ref: "main"
      uri: "https://github.com/leo8a/dell-dsu/"
    type: Git
    dockerfile: |
      FROM quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6ea3c8d02a8a4fec3d026b3bda0cf564de26596ced321ef285cbcd796324602b
      WORKDIR /build/

      # Adjust storage.conf to enable Fuse storage.
      RUN yum -y install git podman fuse-overlayfs fuse3 fuse3-devel fuse3-libs buildah make sudo gcc --exclude container-selinux \
      && yum clean all \
      && rm -rf /var/cache/dnf/
      RUN yum list installed | grep fuse

      RUN echo 'mount_program' >> /etc/containers/storage.conf

      RUN modprobe fuse
      RUN lsmod | grep fuse | wc -l
      RUN find / -name "fuse"

      # Grab the software from upstream
      RUN git clone https://github.com/leo8a/dell-dsu.git
      WORKDIR dell-dsu

      RUN make dtk-install KVER=$(rpm -q --qf "%{VERSION}-%{RELEASE}.%{ARCH}" kernel-core)
  strategy:
    dockerStrategy:
      dockerfilePath: charts/dell-dsu-0.0.1/Dockerfile-dell-dsu.SRO
      buildArgs:
        {{- range $arg := .Values.buildArgs }}
        - name: {{ $arg.Name }}
          value: {{ $arg.Value }}
        {{- end }}
        {{- if .Values.kernelVersion }}
        - name: "KVER"
          value: {{.Values.kernelVersion}}
        {{- else }}
        - name: "KVER"
          value: {{.Values.kernelFullVersion}}
        {{- end }}
        - name: "SIGN_DRIVER"
          {{- if .Values.signDriver }}
          value: "true"
          {{- else }}
          value: "false"
        {{- end }}
        - name: "DOWNLOAD_DRIVER"
          {{- if .Values.downloadDriver }}
          value: "true"
          {{- else }}
          value: "false"
  {{- end }}
  output:
    {{ if not .Values.externalRegistry }}
    to:
      kind: "ImageStreamTag"
      {{- if .Values.kernelVersion }}
      name: {{.Values.containerName}}:{{.Values.kernelVersion}}
      {{- else }}
      name: {{.Values.containerName}}:{{.Values.kernelFullVersion}}
    {{- end }}
    {{ else }}
    pushSecret:
      name: external-registry
    to:
      kind: DockerImage
      {{- if .Values.kernelVersion }}
      name: {{.Values.externalRegistry}}/{{.Values.containerName}}:{{.Values.kernelVersion}}
      {{- else }}
      name: {{.Values.externalRegistry}}/{{.Values.containerName}}:{{.Values.kernelFullVersion}}
    {{- end }}
  {{ end }}
